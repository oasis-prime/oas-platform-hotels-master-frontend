# Copyright 2019 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

on:
  push:
    branches:
      - main

name: Build and Deploy to Cloud Run
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: hotels-online-travel-agency
  REGION: asia-southeast1
  NEXT_PUBLIC_API_GRAPHQL: ""
  NEXT_PUBLIC_FIREBASE_API_KEY: AIzaSyCZxy_LNGr7dn17eiXlaBRYT4TdrU_V2JI
  NEXT_PUBLIC_FIREBASE_APP_ID: 1:261377799143:web:4319e57b8e5df301f20342
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: oas-platform
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: oas-platform.firebaseapp.com
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: oas-platform.appspot.com
  NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: G-5EG5H7WB2H
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: 261377799143
  I18NEXUS_API_KEY: ROJ9P6fy2ajjzBJRhwBsvg

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          workload_identity_provider: "projects/144644461406/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
          service_account: "github-service-account@smartgo-life-prod.iam.gserviceaccount.com"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        with:
          push: true
          tags: g2idocker/auth:latest
          secrets: |
            "NEXT_PUBLIC_API_GRAPHQL=${{ env.NEXT_PUBLIC_API_GRAPHQL }}"
            "NEXT_PUBLIC_FIREBASE_API_KEY=${{ env.NEXT_PUBLIC_FIREBASE_API_KEY }}"
            "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ env.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}"
            "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}"
            "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}"
            "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}"
            "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}"
            "I18NEXUS_API_KEY=${{ env.I18NEXUS_API_KEY }}"
        run: |-
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
      - name: Deploy to Cloud Run
        run: |-
          gcloud run deploy ${{ env.SERVICE }} \
            --region ${{ env.REGION }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} \
            --platform "managed" \
            --quiet
