name: oas-platform-hotels-master-frontend

on:
  push:
    branches:
      - main

env:
  CLOUD_RUN_PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
  CLOUD_RUN_REGION: asia-northeast1
  # project-name but it can be anything you want
  REPO_NAME: oas-platform-hotels-master-frontend
  NEXT_PUBLIC_API_GRAPHQL: ""

  NEXT_PUBLIC_FIREBASE_API_KEY: AIzaSyCZxy_LNGr7dn17eiXlaBRYT4TdrU_V2JI
  NEXT_PUBLIC_FIREBASE_APP_ID: 1:261377799143:web:4319e57b8e5df301f20342
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: oas-platform
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: oas-platform.firebaseapp.com
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: oas-platform.appspot.com
  NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: G-5EG5H7WB2H
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: 261377799143

  I18NEXUS_API_KEY: ROJ9P6fy2ajjzBJRhwBsvg

jobs:
  build-and-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}"
      - name: Enable the necessary APIs and enable docker auth
        run: |-
          gcloud services enable containerregistry.googleapis.com
          gcloud services enable run.googleapis.com
          gcloud --quiet auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build . --tag "gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA"
      - name: Push image to GCR
        run: |-
          docker push gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA
      - name: Deploy
        run: |-
          gcloud components install beta --quiet
          gcloud beta run deploy $REPO_NAME --image gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA \
            --project $CLOUD_RUN_PROJECT_ID \
            --platform managed \
            --region $CLOUD_RUN_REGION \
            --allow-unauthenticated \
            --quiet
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2

    #   # This step is where our service account will be authenticated
    #   - uses: google-github-actions/setup-gcloud@v0.2.0
    #     with:
    #       project_id: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
    #       service_account_key: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}
    #       service_account_email: ${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT_EMAIL }}

    #   - name: Enable the necessary APIs and enable docker auth
    #     run: |-
    #       gcloud services enable containerregistry.googleapis.com
    #       gcloud services enable run.googleapis.com
    #       gcloud --quiet auth configure-docker

    #   - name: Build and tag image
    #     run: |-
    #       docker build . --tag "gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA"

    #   - name: Push image to GCR
    #     run: |-
    #       docker push gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA

    #   - name: Deploy
    #     run: |-
    #       gcloud components install beta --quiet
    #       gcloud beta run deploy $REPO_NAME --image gcr.io/$CLOUD_RUN_PROJECT_ID/$REPO_NAME:$GITHUB_SHA \
    #         --project $CLOUD_RUN_PROJECT_ID \
    #         --platform managed \
    #         --region $CLOUD_RUN_REGION \
    #         --allow-unauthenticated \
    #         --quiet
